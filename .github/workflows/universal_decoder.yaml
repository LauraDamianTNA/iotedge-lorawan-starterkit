name: Universal Decoder CI TNA
on: [push] 

jobs:
  Test_And_Push:
    name: Build, Test and Push Solution
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image:
          - arm32v7
          - amd64
    defaults:
      run:
        working-directory: ./Samples/UniversalDecoder/modules/UniversalDecoder
    outputs:
      tag: ${{ steps.vars.outputs.tag }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
        id: buildx
        with:
           install: true
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Use node JS
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: npm install
      - name: Get vendor file
        run: npm run codecs
      - name: Run Tests
        run: npm test
      - name: Login to registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.CONTAINER_REGISTRY }}
          username: ${{ secrets.CONTAINER_REGISTRY_USERNAME_TEMPLD195 }}
          password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD_TEMPLD195 }}
      - name: Get the image version
        id: vars
        run: echo ::set-output name=tag::0.0.$(echo ${GITHUB_SHA})
      - name: Build the tagged Docker image
        run: docker buildx build --rm -f "Dockerfile.${{ matrix.image }}" -t ${{ secrets.CONTAINER_REGISTRY }}/universaldecoder:${{steps.vars.outputs.tag}}-${{ matrix.image }} "." 
      - name: Push the tagged Docker image
        run: docker push ${{ secrets.CONTAINER_REGISTRY }}/universaldecoder:${{steps.vars.outputs.tag}}-${{ matrix.image }}
        
  Docker_Manifests:
    name: Create manifests
    runs-on: ubuntu-latest
    needs: Test_And_Push
    steps:
      - run: echo "output ${{needs.Test_And_Push.outputs.tag}}"
      - name: Login to registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.CONTAINER_REGISTRY }}
          username: ${{ secrets.CONTAINER_REGISTRY_USERNAME_TEMPLD195 }}
          password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD_TEMPLD195 }}
      - name: Create manifest list
        run: docker manifest create  ${{ secrets.CONTAINER_REGISTRY }}/universaldecoder:${{needs.Test_And_Push.outputs.tag}} ${{ secrets.CONTAINER_REGISTRY }}/universaldecoder:${{needs.Test_And_Push.outputs.tag}}-arm32v7  ${{ secrets.CONTAINER_REGISTRY }}/universaldecoder:${{needs.Test_And_Push.outputs.tag}}-amd64 --amend
      - name: Push manifest
        run: docker manifest push  ${{ secrets.CONTAINER_REGISTRY }}/universaldecoder:${{needs.Test_And_Push.outputs.tag}}
      
